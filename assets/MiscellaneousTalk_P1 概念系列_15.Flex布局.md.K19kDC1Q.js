import{_ as e,c as t,o as l,a3 as d}from"./chunks/framework.b23AWjfV.js";const o="/zijieyuan-blog-pages/assets/Flex.BZJzkjmr.png",b=JSON.parse('{"title":"Flex 布局","description":"","frontmatter":{},"headers":[],"relativePath":"MiscellaneousTalk/P1 概念系列/15.Flex布局.md","filePath":"MiscellaneousTalk/P1 概念系列/15.Flex布局.md"}'),r={name:"MiscellaneousTalk/P1 概念系列/15.Flex布局.md"},a=d('<h1 id="flex-布局" tabindex="-1">Flex 布局 <a class="header-anchor" href="#flex-布局" aria-label="Permalink to &quot;Flex 布局&quot;">​</a></h1><h2 id="flex-布局是什么" tabindex="-1">Flex 布局是什么 <a class="header-anchor" href="#flex-布局是什么" aria-label="Permalink to &quot;Flex 布局是什么&quot;">​</a></h2><ul><li><p>Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性。任何一个容器都可以指定为 Flex 布局</p></li><li><p><code>注意:</code>设为 Flex 布局以后，子元素的 float、clear 和 vertical-align 属性将失效</p></li></ul><h2 id="基本概念" tabindex="-1">基本概念 <a class="header-anchor" href="#基本概念" aria-label="Permalink to &quot;基本概念&quot;">​</a></h2><ul><li>采用 Flex 布局的元素，称为 <code>Flex 容器</code>（flex container），简称&quot;容器&quot;。</li><li>它的所有子元素自动成为容器成员，称为 <code>Flex 项目</code>（flex item），简称&quot;项目&quot;</li></ul><p><img src="'+o+'" alt="Flex" data-fancybox="gallery"></p><ul><li>容器默认存在两根轴：<code>水平的主轴</code>（main axis）和<code>垂直的交叉轴</code>（cross axis）。</li><li>主轴的开始位置（与边框的交叉点）叫做 <code>main start</code>，结束位置叫做 <code>main end</code>；</li><li>交叉轴的开始位置叫做 <code>cross start</code>，结束位置叫做 <code>cross end</code></li><li>项目默认沿主轴排列。单个项目占据的主轴空间叫做 <code>main size</code>，占据的交叉轴空间叫做 <code>cross size</code></li></ul><h2 id="容器的属性" tabindex="-1">容器的属性 <a class="header-anchor" href="#容器的属性" aria-label="Permalink to &quot;容器的属性&quot;">​</a></h2><ol><li><p><strong><code>flex-direction</code></strong></p><ul><li>flex-direction 属性决定主轴的方向（即项目的<code>排列方向</code>）</li><li><code>row | row-reverse | column | column-reverse</code><table tabindex="0"><thead><tr><th>属性值</th><th>主轴方向</th><th>起点位置</th></tr></thead><tbody><tr><td><code>row</code>（默认值）</td><td>水平方向</td><td>左端</td></tr><tr><td><code>row-reverse</code></td><td>水平方向</td><td>右端</td></tr><tr><td><code>column</code></td><td>垂直方向</td><td>上沿</td></tr><tr><td><code>column-reverse</code></td><td>垂直方向</td><td>下沿</td></tr></tbody></table></li></ul></li><li><p><strong><code>flex-wrap</code></strong></p><ul><li>默认情况下，项目都排在一条线（又称&quot;轴线&quot;）上。flex-wrap 属性定义，如果一条轴线排不下，<code>如何换行</code></li><li><code>nowrap | wrap | wrap-reverse</code><table tabindex="0"><thead><tr><th>属性值</th><th>换行行为</th><th>第一行位置</th></tr></thead><tbody><tr><td><code>nowrap</code>（默认）</td><td>不换行</td><td>单行显示</td></tr><tr><td><code>wrap</code></td><td>换行</td><td>第一行在上方</td></tr><tr><td><code>wrap-reverse</code></td><td>换行</td><td>第一行在下方</td></tr></tbody></table></li></ul></li><li><p><strong><code>flex-flow</code></strong></p><ul><li>flex-flow 属性是 flex-direction 属性和 flex-wrap 属性的<code>简写形式，默认值为 row nowrap</code></li></ul></li><li><p><strong><code>justify-content</code></strong></p><ul><li>justify-content 属性定义了项目在<code>主轴上的对齐方式</code></li><li><code>flex-start | flex-end | center | space-between | space-around</code><table tabindex="0"><thead><tr><th>属性值</th><th>对齐方式描述</th></tr></thead><tbody><tr><td><code>flex-start</code>（默认值）</td><td>左对齐（主轴起点方向）</td></tr><tr><td><code>flex-end</code></td><td>右对齐（主轴终点方向）</td></tr><tr><td><code>center</code></td><td>居中对齐</td></tr><tr><td><code>space-between</code></td><td>两端对齐，项目之间的间隔相等</td></tr><tr><td><code>space-around</code></td><td>每个项目两侧的间隔相等，项目与边框的间隔是项目间间隔的一半</td></tr></tbody></table></li></ul></li><li><p><strong><code>align-items</code></strong></p><ul><li>align-items 属性定义项目在交叉轴上如何对齐</li><li><code>flex-start | flex-end | center | baseline | stretch</code><table tabindex="0"><thead><tr><th>属性值</th><th>对齐方式描述</th></tr></thead><tbody><tr><td><code>flex-start</code></td><td>交叉轴起点对齐</td></tr><tr><td><code>flex-end</code></td><td>交叉轴终点对齐</td></tr><tr><td><code>center</code></td><td>交叉轴中点对齐</td></tr><tr><td><code>baseline</code></td><td>项目的第一行文字的基线对齐</td></tr><tr><td><code>stretch</code>（默认值）</td><td>如果项目未设置高度或设为 <code>auto</code>，则占满整个容器的高度</td></tr></tbody></table></li></ul></li><li><p><strong><code>align-content</code></strong></p><ul><li>align-content 属性定义了<code>多根轴线的对齐方式</code>。<code>如果项目只有一根轴线，该属性不起作用</code></li><li><code>flex-start | flex-end | center | space-between | space-around | stretch</code></li></ul></li></ol><h2 id="项目的属性" tabindex="-1">项目的属性 <a class="header-anchor" href="#项目的属性" aria-label="Permalink to &quot;项目的属性&quot;">​</a></h2><ol><li><p>order</p><ul><li>order 属性定义<code>项目的排列顺序</code>。数值越小，排列越靠前，默认为 0</li></ul></li><li><p>flex-grow</p><ul><li>flex-grow 属性定义<code>项目的放大比例</code>，默认为 0，即如果存在剩余空间，也不放大</li><li><code>注意：</code>如果所有项目的 flex-grow 属性都为 1，则它们将等分剩余空间（如果有的话）。如果一个项目的 flex-grow 属性为 2，其他项目都为 1，则前者占据的剩余空间将比其他项<code>多一倍</code></li></ul></li><li><p>flex-shrink</p><ul><li>flex-shrink 属性定义了<code>项目的缩小比例</code>，默认为 1，即如果空间不足，该项目将缩小</li><li><code>注意：</code>如果所有项目的 flex-shrink 属性都为 1，当空间不足时，都将等比例缩小。如果一个项目的 flex-shrink 属性为 0，其他项目都为 1，则空间不足时，前者<code>不缩小</code></li></ul></li><li><p>flex-basis</p><ul><li>flex-basis 属性定义了在分配多余空间之前，<code>项目占据的主轴空间</code>（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为 auto，即项目的本来大小。</li><li>它可以设为跟 width 或 height 属性一样的值（比如 350px），则项目将占据固定空间</li></ul></li><li><p>flex</p><ul><li>flex 属性是 flex-grow, flex-shrink 和 flex-basis 的简写，默认值为 0 1 auto。后两个属性可选</li></ul></li><li><p>align-self</p><ul><li>align-self 属性允许单个项目有<code>与其他项目不一样的对齐方式</code>，可<code>覆盖 align-items 属性</code>。默认值为 auto，表示继承父元素的 align-items 属性，如果没有父元素，则等同于 stretch</li><li><code>auto | flex-start | flex-end | center | baseline | stretch</code></li><li>除了 auto，其他都与 align-items 属性完全一致 F</li></ul></li></ol><h2 id="参考文献" tabindex="-1">参考文献 <a class="header-anchor" href="#参考文献" aria-label="Permalink to &quot;参考文献&quot;">​</a></h2><ul><li><a href="https://ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noreferrer">阮一峰 Flex 布局语法详解</a></li><li><a href="https://www.ruanyifeng.com/blog/2015/07/flex-examples.html" target="_blank" rel="noreferrer">阮一峰 Flex 布局实例演示</a></li></ul>',13),c=[a];function i(n,s,h,x,u,f){return l(),t("div",null,c)}const g=e(r,[["render",i]]);export{b as __pageData,g as default};
