import{_ as s,c as a,o as i,a3 as e}from"./chunks/framework.z7kdJ_yr.js";const g=JSON.parse('{"title":"组件库按需加载","description":"","frontmatter":{},"headers":[],"relativePath":"Deepunderstanding/P3 方案思路系列/4.组件库按需加载.md","filePath":"Deepunderstanding/P3 方案思路系列/4.组件库按需加载.md"}'),t={name:"Deepunderstanding/P3 方案思路系列/4.组件库按需加载.md"},n=e(`<h1 id="组件库按需加载" tabindex="-1">组件库按需加载 <a class="header-anchor" href="#组件库按需加载" aria-label="Permalink to &quot;组件库按需加载&quot;">​</a></h1><h3 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h3><p><code>组件库按需加载</code>： 组件库以组件为基本单位产出 js、css、less 文件，借助插件或者部分引入的写法，使得项目代码或 babel <code>编译后的代码中只包含使用到的组件</code>的 js、css、less 等</p><p><code>webpack 懒加载</code>（也称为代码分割或动态导入）： webpack 将源码中的 import、require 引入的文件编译之后再根据动态加载语法配置（通常以页面路由为基本单位）<code>将较大的代码拆分并构建出较小的 chunk 包</code>，应用在<code>运行时执行到相应业务逻辑时才去加载执行对应 chunk 代码</code>。</p><p>总结：按需加载时在构建的时候，就去掉了不需要的代码，而懒加载是通过编译标识动态加载点延迟代码的加载时间，</p><h2 id="基本原理" tabindex="-1">基本原理 <a class="header-anchor" href="#基本原理" aria-label="Permalink to &quot;基本原理&quot;">​</a></h2><p>原理主要是基于<code>动态导入</code>和<code>模块打包工具</code>（如 Webpack、Rollup 等）的特性来实现。 其主要目标是优化前端应用的性能，通过<code>只加载当前页面或功能所需的部分组件代码</code>，避免一次性加载整个组件库导致的资源浪费和初始加载时间过长。</p><h3 id="方案一-手动引入" tabindex="-1">方案一：手动引入 <a class="header-anchor" href="#方案一-手动引入" aria-label="Permalink to &quot;方案一：手动引入&quot;">​</a></h3><p>手动引入需要使用到的组件以及其对应的样式文件即可，借助 webpack 构件时组件库中其他未被引入的文件不会被打包（Tree Shaking 技术）</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ComponentBtn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vant/lib/Componentbtn&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vant/lib/Componentbtn/style&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="方案二-自动加载" tabindex="-1">方案二：自动加载 <a class="header-anchor" href="#方案二-自动加载" aria-label="Permalink to &quot;方案二：自动加载&quot;">​</a></h3><p>使用插件自动引入就是插件帮我们把引入组件的写法进行了转换，最后转换成了方案一中手动加载方式的写法</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 源代码</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Button } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vant&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 借助 babel-plugin-import 转换为</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vant/es/button/style&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _Button </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vant/es/button&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="参考文献" tabindex="-1">参考文献 <a class="header-anchor" href="#参考文献" aria-label="Permalink to &quot;参考文献&quot;">​</a></h2><ul><li><a href="https://www.npmjs.com/package/babel-plugin-import" target="_blank" rel="noreferrer">babel-plugin-import</a></li></ul>`,15),l=[n];function p(h,o,r,d,k,c){return i(),a("div",null,l)}const b=s(t,[["render",p]]);export{g as __pageData,b as default};
