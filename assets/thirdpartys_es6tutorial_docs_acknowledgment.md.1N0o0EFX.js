import{_ as e,c as t,o as a,a3 as o}from"./chunks/framework.b23AWjfV.js";const u=JSON.parse('{"title":"鸣谢","description":"","frontmatter":{},"headers":[],"relativePath":"thirdpartys/es6tutorial/docs/acknowledgment.md","filePath":"thirdpartys/es6tutorial/docs/acknowledgment.md"}'),r={name:"thirdpartys/es6tutorial/docs/acknowledgment.md"},n=o('<h1 id="鸣谢" tabindex="-1">鸣谢 <a class="header-anchor" href="#鸣谢" aria-label="Permalink to &quot;鸣谢&quot;">​</a></h1><h2 id="generator" tabindex="-1">Generator <a class="header-anchor" href="#generator" aria-label="Permalink to &quot;Generator&quot;">​</a></h2><p>网友 vision57 提出，<code>next()</code>、<code>throw()</code>、<code>return()</code>这三个方法本质上是同一件事，可以放在一起理解。它们的作用都是让 Generator 函数恢复执行，并且使用不同的语句替换<code>yield</code>表达式。</p>',3),c=[n];function d(s,i,_,l,h,p){return a(),t("div",null,c)}const f=e(r,[["render",d]]);export{u as __pageData,f as default};
