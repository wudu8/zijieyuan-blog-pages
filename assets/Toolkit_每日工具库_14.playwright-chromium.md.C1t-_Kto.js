import{_ as i,c as s,o as a,a3 as h}from"./chunks/framework.b23AWjfV.js";const d=JSON.parse('{"title":"playwright-chromium","description":"","frontmatter":{},"headers":[],"relativePath":"Toolkit/每日工具库/14.playwright-chromium.md","filePath":"Toolkit/每日工具库/14.playwright-chromium.md"}'),t={name:"Toolkit/每日工具库/14.playwright-chromium.md"},l=h(`<h1 id="playwright-chromium" tabindex="-1">playwright-chromium <a class="header-anchor" href="#playwright-chromium" aria-label="Permalink to &quot;playwright-chromium&quot;">​</a></h1><p>playwright-chromium 是一个用于自动化测试和控制 Chromium 浏览器的工具包。它是 Playwright 项目的一部分，提供了一组功能强大的 API，用于模拟用户操作浏览器、执行自动化测试、抓取网页内容等。以下是关于 playwright-chromium 的介绍和原理：</p><blockquote><p>功能</p></blockquote><ul><li>自动化测试：playwright-chromium 可以用于编写和运行自动化测试，模拟用户在 Chromium 浏览器中的操作，如点击、填写表单、导航等，以验证网页应用的行为和性能。</li><li>网页抓取：可以使用 playwright-chromium 来抓取网页内容，包括 HTML、截图、PDF 等，用于数据采集、生成网页快照等应用场景。</li><li>跨平台支持：playwright-chromium 支持在不同平台上运行，包括 Windows、macOS 和 Linux。</li><li>多浏览器支持：除了 Chromium，Playwright 还支持其他浏览器，如 Firefox 和 WebKit，使得可以在不同浏览器上执行相同的测试脚本。</li></ul><blockquote><p>原理</p></blockquote><ul><li>playwright-chromium 的原理基于 Chromium 浏览器的开发者工具协议（DevTools Protocol）。它通过与 Chromium 浏览器建立连接，并使用 DevTools Protocol 来控制浏览器的行为，包括模拟用户操作、检查页面状态、执行 JavaScript 等。</li></ul><p>在执行自动化测试时，playwright-chromium 会启动一个 headless（无头）或有界面的 Chromium 浏览器实例，并通过 DevTools Protocol 来模拟用户操作，如点击、输入、导航等。它还可以捕获浏览器的状态和性能数据，以便进行验证和分析。</p><p>总的来说，playwright-chromium 通过与 Chromium 浏览器的 DevTools Protocol 交互，提供了一套强大的 API，用于自动化测试和浏览器控制，使得开发者可以方便地编写和运行各种浏览器相关的自动化任务。</p><h2 id="案例" tabindex="-1">案例 <a class="header-anchor" href="#案例" aria-label="Permalink to &quot;案例&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { chromium } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;playwright&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> browser</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chromium.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">launch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> context</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> browser.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> page</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> context.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 打开百度，然后截取全屏保存一张图片</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">goto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://www.baidu.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">screenshot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ path: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> browser.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})();</span></span></code></pre></div>`,10),n=[l];function p(k,e,r,o,E,c){return a(),s("div",null,n)}const y=i(t,[["render",p]]);export{d as __pageData,y as default};
