import{_ as e,c as t,o as a,a3 as i}from"./chunks/framework.b23AWjfV.js";const T=JSON.parse('{"title":"TypeScript 系列","description":"","frontmatter":{},"headers":[],"relativePath":"InterviewQuestions/P3 八股文/17.TypeScript 系列.md","filePath":"InterviewQuestions/P3 八股文/17.TypeScript 系列.md"}'),r={name:"InterviewQuestions/P3 八股文/17.TypeScript 系列.md"},p=i('<h1 id="typescript-系列" tabindex="-1">TypeScript 系列 <a class="header-anchor" href="#typescript-系列" aria-label="Permalink to &quot;TypeScript 系列&quot;">​</a></h1><h2 id="typescript-中-const-和-readonly-的区别-枚举和常量枚举的区别" tabindex="-1">TypeScript 中 const 和 readonly 的区别？枚举和常量枚举的区别？ <a class="header-anchor" href="#typescript-中-const-和-readonly-的区别-枚举和常量枚举的区别" aria-label="Permalink to &quot;TypeScript 中 const 和 readonly 的区别？枚举和常量枚举的区别？&quot;">​</a></h2><ul><li><p>const 和 readonly 的区别</p><blockquote><ol><li>const 用于<code>变量</code>， readonly 用于<code>属性</code></li><li>const 在<code>运行时检查</code>， readonly 在<code>编译时检查</code></li><li>const 一旦声明变量，就必须立即初始化</li><li>const 保证的是变量指向的那个内存地址不得改动，例如使用 const 变量保存的数组，可以使用 push，pop 等方法。但是如果使用 <code>ReadonlyArray&lt;number&gt;</code> 声明的数组不能使用 push ，pop 等方法</li></ol></blockquote></li><li><p>枚举和常量枚举的区别</p><blockquote><ol><li>枚举会被编译时会<code>编译成一个对象</code>，可以被当作对象使用</li><li>const 枚举会在 typescript 编译期间被删除，生成的 JavaScript 文件中不会存在枚举类型，所有的<code>枚举成员都会被替换为它们的实际值</code> (常量枚举 会有更好的性能)</li></ol></blockquote></li></ul><h2 id="typescript-中-any、unknown-有什么区别" tabindex="-1">TypeScript 中 any、unknown 有什么区别? <a class="header-anchor" href="#typescript-中-any、unknown-有什么区别" aria-label="Permalink to &quot;TypeScript 中 any、unknown 有什么区别?&quot;">​</a></h2><ul><li>相同点：可以为 any， unknown 类型变量分配任何值</li><li>不同点：使用 unknown 变量时，TypeScript 会强制执行类型检查</li></ul><h2 id="对-typescript-类中成员的-public、private、protected、readonly-修饰符的理解" tabindex="-1">对 TypeScript 类中成员的 public、private、protected、readonly 修饰符的理解？ <a class="header-anchor" href="#对-typescript-类中成员的-public、private、protected、readonly-修饰符的理解" aria-label="Permalink to &quot;对 TypeScript 类中成员的 public、private、protected、readonly 修饰符的理解？&quot;">​</a></h2><ol><li><code>public</code>: 成员都默认为 public，被此限定符修饰的成员是可以被外部访问；</li><li><code>private</code>: 被此限定符修饰的成员是只可以被类的内部访问；</li><li><code>protected</code>: 被此限定符修饰的成员是只可以被类的内部以及类的子类访问;</li><li><code>readonly</code>: 关键字将属性设置为只读的。 只读属性必须在声明时或构造函数里被初始化。</li></ol><h2 id="typescript-的类型工具" tabindex="-1">TypeScript 的类型工具？ <a class="header-anchor" href="#typescript-的类型工具" aria-label="Permalink to &quot;TypeScript 的类型工具？&quot;">​</a></h2><ul><li><p><code>Exclude&lt;T, K&gt;</code>: 用来从联合类型 T 里面，删除某些类型 K</p></li><li><p><code>Extract&lt;T, K&gt;</code>: 用来从联合类型 T 之中，提取指定类型 K</p></li><li><p><code>Omit&lt;Type, Keys&gt;</code>: 用来从对象类型 Type 中，删除指定的属性 Keys</p></li><li><p><code>Pick&lt;Type, Keys&gt;</code>: 用来从对象类型 Type 中，选定指定的属性 Keys</p></li><li><p><code>Partial&lt;Type&gt;</code>: 将参数类型 Type 的所有属性变为可选属性</p></li><li><p><code>Required&lt;Type&gt;</code>: 将参数类型 Type 的所有属性变为必选属</p></li></ul><h2 id="typescript-中-type-和-interface-的区别" tabindex="-1">TypeScript 中 type 和 interface 的区别? <a class="header-anchor" href="#typescript-中-type-和-interface-的区别" aria-label="Permalink to &quot;TypeScript 中 type 和 interface 的区别?&quot;">​</a></h2><ul><li><p>相同点：</p><ul><li>都可以描述 &#39;对象&#39; 或者 &#39;函数&#39;</li><li>都允许拓展(extends)</li></ul></li><li><p>不同点：</p><ul><li>type 可以声明基本类型，联合类型，元组</li><li>type 可以使用 typeof 获取实例的类型进行赋值</li><li>多个相同的 interface 声明可以自动合并</li></ul></li></ul><h2 id="typescript-函数声明写法" tabindex="-1">TypeScript 函数声明写法 <a class="header-anchor" href="#typescript-函数声明写法" aria-label="Permalink to &quot;TypeScript 函数声明写法&quot;">​</a></h2><h2 id="说说你对-typescript-的理解-与-javascript-的区别" tabindex="-1">说说你对 TypeScript 的理解？与 JavaScript 的区别？ <a class="header-anchor" href="#说说你对-typescript-的理解-与-javascript-的区别" aria-label="Permalink to &quot;说说你对 TypeScript 的理解？与 JavaScript 的区别？&quot;">​</a></h2><h2 id="说说-typescript-的数据类型有哪些" tabindex="-1">说说 Typescript 的数据类型有哪些？ <a class="header-anchor" href="#说说-typescript-的数据类型有哪些" aria-label="Permalink to &quot;说说 Typescript 的数据类型有哪些？&quot;">​</a></h2><h2 id="说说你对-typescript-中枚举类型的理解-应用场景" tabindex="-1">说说你对 TypeScript 中枚举类型的理解？应用场景？ <a class="header-anchor" href="#说说你对-typescript-中枚举类型的理解-应用场景" aria-label="Permalink to &quot;说说你对 TypeScript 中枚举类型的理解？应用场景？&quot;">​</a></h2><h2 id="说说你对-typescript-中接口的理解-应用场景" tabindex="-1">说说你对 TypeScript 中接口的理解？应用场景？ <a class="header-anchor" href="#说说你对-typescript-中接口的理解-应用场景" aria-label="Permalink to &quot;说说你对 TypeScript 中接口的理解？应用场景？&quot;">​</a></h2><h2 id="说说你对-typescript-中类的理解-应用场景" tabindex="-1">说说你对 TypeScript 中类的理解？应用场景？ <a class="header-anchor" href="#说说你对-typescript-中类的理解-应用场景" aria-label="Permalink to &quot;说说你对 TypeScript 中类的理解？应用场景？&quot;">​</a></h2><h2 id="说说你对-typescript-中函数的理解-与-javascript-函数的区别" tabindex="-1">说说你对 TypeScript 中函数的理解？与 JavaScript 函数的区别？ <a class="header-anchor" href="#说说你对-typescript-中函数的理解-与-javascript-函数的区别" aria-label="Permalink to &quot;说说你对 TypeScript 中函数的理解？与 JavaScript 函数的区别？&quot;">​</a></h2><h2 id="说说你对-typescript-中泛型的理解-应用场景" tabindex="-1">说说你对 TypeScript 中泛型的理解？应用场景？ <a class="header-anchor" href="#说说你对-typescript-中泛型的理解-应用场景" aria-label="Permalink to &quot;说说你对 TypeScript 中泛型的理解？应用场景？&quot;">​</a></h2><h2 id="说说你对-typescript-中高级类型的理解-有哪些" tabindex="-1">说说你对 TypeScript 中高级类型的理解？有哪些？ <a class="header-anchor" href="#说说你对-typescript-中高级类型的理解-有哪些" aria-label="Permalink to &quot;说说你对 TypeScript 中高级类型的理解？有哪些？&quot;">​</a></h2><h2 id="说说你对-typescript-装饰器的理解-应用场景" tabindex="-1">说说你对 TypeScript 装饰器的理解？应用场景？ <a class="header-anchor" href="#说说你对-typescript-装饰器的理解-应用场景" aria-label="Permalink to &quot;说说你对 TypeScript 装饰器的理解？应用场景？&quot;">​</a></h2><h2 id="说说对-typescript-中命名空间与模块的理解-区别" tabindex="-1">说说对 TypeScript 中命名空间与模块的理解？区别？ <a class="header-anchor" href="#说说对-typescript-中命名空间与模块的理解-区别" aria-label="Permalink to &quot;说说对 TypeScript 中命名空间与模块的理解？区别？&quot;">​</a></h2><h2 id="说说如何在-react-项目中应用-typescript" tabindex="-1">说说如何在 React 项目中应用 TypeScript？ <a class="header-anchor" href="#说说如何在-react-项目中应用-typescript" aria-label="Permalink to &quot;说说如何在 React 项目中应用 TypeScript？&quot;">​</a></h2><h2 id="说说如何在-vue-项目中应用-typescript" tabindex="-1">说说如何在 Vue 项目中应用 TypeScript？ <a class="header-anchor" href="#说说如何在-vue-项目中应用-typescript" aria-label="Permalink to &quot;说说如何在 Vue 项目中应用 TypeScript？&quot;">​</a></h2>',24),c=[p];function l(o,n,s,d,y,h){return a(),t("div",null,c)}const S=e(r,[["render",l]]);export{T as __pageData,S as default};
