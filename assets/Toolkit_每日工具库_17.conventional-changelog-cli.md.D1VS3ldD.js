import{_ as o,c as n,o as l,a3 as a}from"./chunks/framework.b23AWjfV.js";const e="/zijieyuan-blog-pages/assets/conventional-changelog.AH2uco7M.jpg",_=JSON.parse('{"title":"conventional-changelog-cli","description":"","frontmatter":{},"headers":[],"relativePath":"Toolkit/每日工具库/17.conventional-changelog-cli.md","filePath":"Toolkit/每日工具库/17.conventional-changelog-cli.md"}'),t={name:"Toolkit/每日工具库/17.conventional-changelog-cli.md"},c=a('<h1 id="conventional-changelog-cli" tabindex="-1">conventional-changelog-cli <a class="header-anchor" href="#conventional-changelog-cli" aria-label="Permalink to &quot;conventional-changelog-cli&quot;">​</a></h1><h2 id="conventional-changelog-cli-是什么" tabindex="-1">conventional-changelog-cli 是什么 ？ <a class="header-anchor" href="#conventional-changelog-cli-是什么" aria-label="Permalink to &quot;conventional-changelog-cli 是什么 ？&quot;">​</a></h2><ul><li><p>官方解释： Generate a changelog from git metadata （从 git 元数据生成变更日志）</p></li><li><p>conventional-changelog-cli 是一个用于生成遵循约定式提交规范（Conventional Commits）的变更日志的命令行工具</p></li></ul><blockquote><p>约定式提交规范（Conventional Commits）</p></blockquote><ul><li>类型（Type）：表示提交的类型，如 feat（新功能）、fix（修复 bug）、docs（文档变更）等。</li><li>范围（Scope）：表示变更的范围，可以是某个模块、组件或功能的名称。</li><li>描述（Description）：对变更的简要描述。</li><li>约定式提交规范的好处在于它提供了一种结构化的提交消息格式，使得变更日志更易于自动化生成和解析。eg：feat: 添加用户登录功能</li></ul><h2 id="conventional-changelog-cli-原理" tabindex="-1">conventional-changelog-cli 原理 <a class="header-anchor" href="#conventional-changelog-cli-原理" aria-label="Permalink to &quot;conventional-changelog-cli 原理&quot;">​</a></h2><ul><li>通过解析代码库的提交历史，根据约定式提交规范生成变更日志。</li><li>它会遍历代码库的提交记录，根据提交消息中的类型、范围和描述等信息，</li><li>将每个提交归类到相应的变更类型中（如新功能、修复 bug、文档变更等），并按照一定的格式生成变更日志。</li></ul><blockquote><p>推荐的工作流</p></blockquote><ol><li>进行更改</li><li>提交这些更改</li><li>确保 Travis 变为绿色（需消耗：构建和测试代码）</li><li>在 package.json 中提升版本号</li><li>运行 conventionalChangelog（需消耗：生成变更日志）</li><li>提交 package.json 和 CHANGELOG.md 文件</li><li>打标签</li><li>推送</li></ol><h2 id="conventional-changelog-cli-api" tabindex="-1">conventional-changelog-cli API <a class="header-anchor" href="#conventional-changelog-cli-api" aria-label="Permalink to &quot;conventional-changelog-cli API&quot;">​</a></h2><table tabindex="0"><thead><tr><th>API</th><th>描述</th></tr></thead><tbody><tr><td><code>conventional-changelog</code></td><td>生成符合约定式提交规范的变更日志。</td></tr><tr><td><code>conventional-changelog -p &lt;preset&gt;</code></td><td>根据指定的预设生成变更日志。</td></tr><tr><td><code>conventional-changelog -i &lt;infile&gt;</code></td><td>指定输入的文件来生成变更日志。</td></tr><tr><td><code>conventional-changelog -s</code></td><td>将生成的变更日志追加到已存在的文件末尾。</td></tr><tr><td><code>conventional-changelog -r &lt;releaseCount&gt;</code></td><td>指定从最近的提交开始生成变更日志的数量。</td></tr><tr><td><code>conventional-changelog --config &lt;path&gt;</code></td><td>指定自定义配置文件的路径。</td></tr><tr><td><code>conventional-changelog --context &lt;path&gt;</code></td><td>指定自定义上下文文件的路径。</td></tr><tr><td><code>conventional-changelog --lerna-package &lt;package&gt;</code></td><td>指定 Lerna 项目中的包名称。</td></tr></tbody></table><h2 id="使用方式" tabindex="-1">使用方式 <a class="header-anchor" href="#使用方式" aria-label="Permalink to &quot;使用方式&quot;">​</a></h2><ul><li><p>conventional-changelog -p angular -i CHANGELOG.md -s</p><p><img src="'+e+'" alt="conventional-changelog" data-fancybox="gallery"></p></li></ul><h2 id="参考文献" tabindex="-1">参考文献 <a class="header-anchor" href="#参考文献" aria-label="Permalink to &quot;参考文献&quot;">​</a></h2><ul><li><a href="https://www.npmjs.com/package/conventional-changelog-cli" target="_blank" rel="noreferrer">https://www.npmjs.com/package/conventional-changelog-cli</a></li><li><a href="https://github.com/conventional-changelog/conventional-changelog" target="_blank" rel="noreferrer">https://github.com/conventional-changelog/conventional-changelog</a></li></ul>',15),i=[c];function g(r,h,d,s,p,v){return l(),n("div",null,i)}const m=o(t,[["render",g]]);export{_ as __pageData,m as default};
